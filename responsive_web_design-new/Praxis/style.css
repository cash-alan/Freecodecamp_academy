/* Step 71
Create a new CSS rule that targets the class sleeve. Set the width property to 110px, and the height property to 25px. */
/* Step 72
To make the marker look more realistic, give the sleeve a transparent white color.
First, set the sleeve element's background-color to white. */
/* Step 73
Opacity describes how opaque, or non-transparent, something is. For example, a solid wall is opaque, and no light can pass through. But a drinking glass is much more transparent, and you can see through the glass to the other side.
With the CSS opacity property, you can control how opaque or transparent an element is. With the value 0, or 0%, the element will be completely transparent, and at 1.0, or 100%, the element will be completely opaque like it is by default.
In the .sleeve CSS rule, set the opacity property to 0.5. */
/* Step 74
Another way to set the opacity for an element is with the alpha channel. Similar to the opacity property, the alpha channel controls how transparent or opaque a color is.
You've already set sleeve's opacity with a named color and the opacity property, but you can add an alpha channel to the other CSS color properties.
Inside the .sleeve rule, remove the opacity property and value. */
/* Step 75
You're already familiar with using the rgb function to set colors. To add an alpha channel to an rgb color, use the rgba function instead.
The rgba function works just like the rgb function, but takes one more number from 0 to 1.0 for the alpha channel:
`rgba(redValue, greenValue, blueValue, alphaValue);`
In the .sleeve rule, use the rgba function to set the background-color property to pure white with 50% opacity. */
/* Step 77
Create a new CSS rule to target the class cap. In the new rule, set the width property to 60px, and the height to 25px. */
/* Step 78
It looks like your sleeve disappeared, but don't worry -- it's still there. What happened is that your new cap div is taking up the entire width of the marker, and is pushing the sleeve down to the next line.
This is because the default display property for div elements is block. So when two block elements are next to each other, they stack like actual blocks. For example, your marker elements are all stacked on top of each other.
To position two div elements on the same line, set their display properties to inline-block.
Create a new rule to target both the cap and sleeve classes, and set display to inline-block. */

h1 {
  text-align: center;
}

.container {
  background-color: rgb(255, 255, 255);
  padding: 10px 0;
}

.marker {
  width: 200px;
  height: 25px;
  margin: 10px auto;
}

.cap {
  width: 60px;
  height: 25px;
}

.sleeve {
  width: 110px;
  height: 25px;
  background-color: rgba(255, 255, 255, 0.5);
}

.cap, .sleeve {
  display: inline-block;
}

.red {
  background: linear-gradient(rgb(122, 74, 14), rgb(245, 62, 113), rgb(162, 27, 27));
}

.green {
  background: linear-gradient(#55680D, #71F53E, #116C31);
}

.blue {
  background: linear-gradient(hsl(186, 76%, 16%), hsl(223, 90%, 60%), hsl(240, 56%, 42%));
}

